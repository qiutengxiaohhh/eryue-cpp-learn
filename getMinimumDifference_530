#include "header.h"

std::vector<int> v;

void dfs(TreeNode* root) {
    if (root== nullptr) return;

    dfs(root->left);
    v.push_back(root->val);
    dfs(root->right);
}

int result = INT_MAX;
TreeNode* pre;
void dfs1(TreeNode* root) {
    if (root== nullptr) return;

    dfs(root->left);

    if(pre != nullptr) {
        result = std::min(result , pre->val - root->val);
    }
    pre = root;

    dfs(root->right);
}



int getMinimumDifference(TreeNode* root) {
    if(root== nullptr) return 0;

    dfs(root);

    int min = 999999;
    int diff = 0;
    for (int i = 1; i < v.size(); ++i) {
        diff = v[i] - v[i-1];
        if(diff<min) {
            min = diff;
        }
    }
    return min;
}

int main() {

}
